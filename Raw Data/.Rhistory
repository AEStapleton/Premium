View(fraudulent_rewards)
splits <- read.csv("~/R/Data/OT1/Working Data/tech-adj split.csv", stringsAsFactors=FALSE)
View(splits)
redisConnect()
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(200)
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}})
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
redisConnect()
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(250)
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}})
?sprintf
traceback(
redisConnect()
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(250)
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}}))
?traceback
traceback(
redisConnect()
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(250)
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}}))
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs')
traceback(
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(250)
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}}))
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
?debug
registerDoRedis('jobs')
startLocalWorkers(n=1,'jobs')
setChunkSize(250)
traceback(
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}}))
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
system.time
startLocalWorkers
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=1,'jobs',host="localhost",port=6379)
setChunkSize(250)
traceback(
system.time({
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}}))
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=1,'jobs',host="localhost",port=6379)
setChunkSize(250)
traceback(
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}})
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=1,'jobs',host="localhost",port=6379)
setChunkSize(250)
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis
setChunkSize
startLocalWorkers(n=1,'jobs',host="localhost",port=6379)
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=2,queue'jobs',host="localhost",port=6379)
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=2,queue='jobs',host="localhost",port=6379)
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
removeQueue('jobs')
registerDoRedis('jobs',host="localhost",port=6379)
startLocalWorkers(n=2,queue='jobs',host="localhost",port=6379)
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis('jobs')
startLocalWorkers(n=2,queue='jobs')
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
registerDoRedis("jobs")
startLocalWorkers(n=2,queue="jobs")
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
require('doRedis')
registerDoRedis('jobs')
startLocalWorkers(n=2, queue='jobs')
print(getDoParWorkers())
foreach(j=1:10,.combine=sum,.multicombine=TRUE) %dopar%
4*sum((runif(1000000)^2 + runif(1000000)^2)<1)/10000000
removeQueue('jobs')
library("doRedis", lib.loc="~/R/win-library/3.2")
require('doRedis')
registerDoRedis("jobs")
startLocalWorkers(n=2,queue="jobs")
adjuster<-vector(length=1847)
technician<-vector(length=1847)
zip<-vector(length=1847)
foreach(i =1:1847,.combine=c) %dopar%{
for(j in 1:53730){
if(fraudulent_rewards$Cov_ID[i]==splits$Cov_ID[j]){
adjuster[i]<-splits$Adjuster.ID[i]
technician[i]<-splits$Technician.ID[i]
zip[i]<-splits$Adj_ZIP[i]
}}}
adjdat<-as.data.frame(cbind(adjuster,technician,zip))
fraudtech<-as.data.frame(cbind(fraudulent_rewards,adjdat))
install.packages("quantmod")
library("quantmod", lib.loc="~/R/win-library/3.2")
AAPL.OPT <- getOptionChain("AAPL")
require("quantmod")
install.packages("xts")
require(quantmod)
AAPL.OPT <- getOptionChain("AAPL")
AAPL.OPT
plot(AAPL.OPT[,1],AAPL.OPT[,2])
class(AAPL.OPT)
head(AAPL.OPT)
AAPL.OPT[[1]]
AAPL.OPT[[1]][,1]
plot(AAPL.OPT[[1]][,1],AAPL.OPT[[1]][,2])
require('quantmod')
require(quantmod)
library(quantmod)
library('quantmod')
library("quantmod")
library("quantmod", lib.loc="~/R/win-library/3.2")
detach("package:quantmod", unload=TRUE)
require('quantmod')
getSymbols.yahoo('SPX')
getSymbols.yahoo('SPDR')
(62+63)/2
(62*63)/2
death <- read.csv("~/R/Data/OT1/Working Data/death.csv")
View(death)
colnames(death)
X<-as.data.frame(cbind(death[,10:67]))
colnames(X)
X<-cbind(X,death[,c(73,84,85,87,88)])
colnames(X)
dim(X)
63*64/2
interactions<-as.data.frame(matrix(nrow=24911,ncol=2016,bycol=T))
for(i in 1:62){
for(j in 2:62){
interactions[1:24911,]<-X[,i]*X[,j]
}}
interactions<-as.data.frame(matrix(nrow=24911,ncol=2016,byrow=FALSE))
for(i in 1:62){
for(j in 2:62){
interactions[1:24911,]<-X[,i]*X[,j]
}}
interactions<-as.data.frame(matrix(nrow=24911,ncol=2016,bycol=T))
for(i in 1:62){
for(j in 2:63){
interactions[1:24911,]<-as.numeric(X[,i])*as.numeric(X[,j])
}}
head(interactions[,1])
count(interactions[,1])
require(plyr)
count(interactions[,1])
interactions<-as.data.frame(matrix(nrow=24911,ncol=2016,bycol=T))
for(i in 1:62){
for(j in 2:63){
interactions[1:24911,]<-as.numeric(X[,i])*as.numeric(X[,j])
}}
interactions<-as.data.frame(matrix(nrow=24911,ncol=2016,byrow=FALSE))
for(i in 1:62){
for(j in 2:63){
interactions[1:24911,]<-as.numeric(X[,i])*as.numeric(X[,j])
}}
require(doParallel)
detectCores()
cl<-makeCluster(4)
registerDoParallel(cl)
getDoParWorkers()
interactions<-vector(length=24911)
foreach(i = 1:62) %dopar%{
for(j in 2:63){
interactions<-as.data.frame(cbind(interactions,as.numeric(X[,i])*as.numeric(X[,j])))
}}
intset<-as.data.frame(as.numeric(X[,1])*as.numeric(X[,1]))
foreach(i = 1:62) %dopar%{
for(j in 2:63){
interactions<-as.numeric(X[,i])*as.numeric(X[,j])
int.set<-as.data.frame(cbind(int.set,interactions))
}}
foreach(i = 1:62) %dopar%{
for(j in 2:63){
interactions<-as.numeric(X[,i])*as.numeric(X[,j])
intset<-as.data.frame(cbind(intset,interactions))
}}
intset<-as.data.frame(as.numeric(X[,1])*as.numeric(X[,1]))
foreach(i = 1:62) %dopar%{
for(j in 2:63){
interactions<-as.numeric(X[,i])*as.numeric(X[,j])
int.set<-c(cbind(int.set,interactions))
}}
intset<-as.data.frame(as.numeric(X[,1])*as.numeric(X[,1]))
foreach(i = 1:62) %dopar%{
for(j in 2:63){
interactions<-as.numeric(X[,i])*as.numeric(X[,j])
intset<-c(cbind(intset,interactions))
}}
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr", lib.loc="~/R/win-library/3.2")
install.packages(installr)
install.packages("installr")
library("installr", lib.loc="~/R/win-library/3.2")
require(installr)
updateR()
install.packages("viridis")
install.packages("devtools")
devtools::install_github("ropensci/plotly")
find_rtools()
find_rtools()
find_rtools()
find_rtools()
devtools::install_github("ropensci/plotly")
library("plotly", lib.loc="~/R/win-library/3.2")
detach("package:plotly", unload=TRUE)
Sys.setenv("plotly_username"="skosowsky")
Sys.setenv("plotly_api_key"="h7fhkzhaia")
library("plotly", lib.loc="~/R/win-library/3.2")
plotly_data<-read.csv(file.choose(),stringsAsFactors = FALSE)
View(plotly_data)
xyz_data<-as.data.frame(cbind(plotly_data$yield,as.factor(plotly_data$brand_hybrid),as.factor(plotly_data$cluster)))
str(xyz_data)
df <- setNames(xyz_data, c("yield", "hybrid", "cluster"))
plot_ly(df, x = yield, y = hybrid, z = cluster, type = "scatter3d", mode = "markers", filename="r-docs/3d-scatter")
plot_ly(df, x = yield, y = as.factor(hybrid), text = paste("Cluster: ", cluster),
mode = "markers", color = cluster, size = yield)
plot_ly(df, x = cluster, y = as.factor(hybrid), text = paste("Cluster: ", cluster),
mode = "markers", color = yield, size = yield)
plot_ly(df, x = hybrid, y = cluster, text = paste("Cluster: ", cluster),
mode = "markers", color = yield, size = yield)
xyz_data<-as.data.frame(cbind(plotly_data$yield,as.factor(plotly_data$air.sig995),as.factor(plotly_data$cluster)))
df <- setNames(xyz_data, c("yield", "air.sig995", "cluster"))
plot_ly(df, x = yield, y = air.sig995, z = cluster, type = "scatter3d", mode = "markers", filename="r-docs/3d-scatter")
count(plotly_data$brand_hybrid)
requrie(plyr)
require(plyr)
count(plotly_data$brand_hybrid)
library("quantmod", lib.loc="~/R/win-library/3.2")
sym<-c("crm","wday")
prcs<-getSymbols.yahoo(sym,from="2012-01-01",to=Sys.Date())
prcs<-getSymbols.yahoo(sym,env, from="2012-01-01",to=Sys.Date())
prcs<-getSymbols.yahoo(sym,env, from="2013-01-01",to=Sys.Date())
prcs<-getSymbols.yahoo(sym,env, from="2014-01-01",to=Sys.Date())
prcs<-getSymbols(sym,env, src='yahoo',from="2014-01-01",to=Sys.Date())
prcs<-getSymbols(sym,src='yahoo',from="2014-01-01",to=Sys.Date())
prcs
getPrice(symbol=sym)
getSymbols("CRM",src=yahoo)
getSymbols("CRM",src="yahoo")
str(CRM)
getSymbols("WDAY",src="yahoo")
names(CRM)
plot(CRM$CRM.Close/WDAY$WDAY.Close)
dim(CRM)
plot(CRM$CRM.Close/WDAY$WDAY.Close[500:2171])
plot(CRM$CRM.Close[500:2171/WDAY$WDAY.Close[500:2171])
plot(CRM$CRM.Close[500:2171]/WDAY$WDAY.Close[500:2171])
length(WDAY$WDAY.Close)
length(CRM$CRM.Close)
dim(CRM)
dim(WDAY)
2171-714
plot(CRM$CRM.Close[1457:2171]/WDAY$WDAY.Close)
plot(CRM$CRM.Close[1457:2171])
plot(CRM$CRM.Close)
plot(CRM$CRM.Close[1457:2171])
plot(CRM$CRM.Close[160:2171])
plot(CRM$CRM.Close[1600:2171])
2171-1600
length(WDAY$WDAY.Close)
714-571
length(WDAY$WDAY.Close[143:571])
length(WDAY$WDAY.Close[143:714])
length(WDAY$WDAY.Close[144:714])
CRM$CRM.Close[1600:2171]/WDAY$WDAY.Close[144:714]
plot(CRM$CRM.Close[1600:2171]/WDAY$WDAY.Close[144:714])
plot((CRM$CRM.Close[1600:2171]/WDAY$WDAY.Close[144:714])-mean(CRM$CRM.Close[1600:2171]/WDAY$WDAY.Close[144:714]))
plot((CRM$CRM.Close[1700:2171]/WDAY$WDAY.Close[244:714])-mean(CRM$CRM.Close[1700:2171]/WDAY$WDAY.Close[244:714]))
plot((CRM$CRM.Close[1700:2071]/WDAY$WDAY.Close[244:614])-mean(CRM$CRM.Close[1700:2071]/WDAY$WDAY.Close[244:614]))
length(CRM$CRM.Close[1700:2071])
lines(rep(1,372),col="red")
lines(rep(0,372),col="red")
line1<-rep(1,372)
line(line1)
lines(line1)
CRM$CRM.Close[1700:2071]
CRM$CRM.Close[1700]
WDAY$WDAY.Close[1700]
WDAY$WDAY.Close[244]
53.15/82.4
plot((CRM$CRM.Close[1700:2071]*0.6450243))
lines(WDAY$WDAY.Close[244:614]))
lines(WDAY$WDAY.Close[244:614])
?lines
28/60
plot(CRM)
str(CRM)
?xts
names(CRM)
names(CRM.Close)
names(CRM$CRM.Close)
plot(CRM$CRM.Close)
buildModel(CRM)
q.model = specifyModel(Next(OpCl(CRM)) ~ Lag(OpHi(CRM),0:3))
buildModel(q.model,method='lm',training.per=c('2006-08-01','2006-09-30'))
buildModel(q.model,method='lm',training.per=c('2012-08-01',system.time()))
buildModel(q.model,method='lm',training.per=c('2012-08-01','2014-09-30'))
mod<-buildModel(q.model,method='lm',training.per=c('2012-08-01','2014-09-30'))
`fittedModel<-`(mod)
`fittedModel<-(mod)
`fittedModel<-(mod)
fit<-fittedModel(mod)
coef(fit)
class(fit)
summary(fit)
plot(fit)
plot(fitted.values(fit))
install.packages("shiny")
?require
library(plyr)
library(dplyr)
library(tidyr)
library(xlsx)
library(XLConnect)
workingD <- setwd("C:\\Users\\Sean\\Documents\\GitHub\\Premium\\Input Data")
wb <- loadWorkbook("C:\\Users\\Chuck\\Documents\\GitHub\\Premium\\Input Data\\IA\\2014_ISU_CornSingleLocationData.xlsx")
lst = readWorksheet(wb, sheet = getSheets(wb))
library("rJava", lib.loc="~/R/win-library/3.2")
install.packages("rJava")
library(plyr)
library(dplyr)
library(tidyr)
library(xlsx)
library(XLConnect)
library("rJava", lib.loc="~/R/win-library/3.2")
library("xlsx", lib.loc="~/R/win-library/3.2")
Sys.getenv("JAVA_HOME")
install.packages("rJava")
library("rJava", lib.loc="~/R/win-library/3.2")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="~/R/win-library/3.2")
detach("package:rJava", unload=TRUE)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
library("rJava", lib.loc="~/R/win-library/3.2")
